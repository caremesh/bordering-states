root: true
parserOptions:
  ecmaVersion: 9
  sourceType: "module"
env:
  node: true
  es6: true
globals:
  describe: true
  it: true
plugins:
  - promise
extends: eslint:recommended
rules:
  indent:
    - "error"
    - 2
  linebreak-style:
    - "error"
    - "unix"
  quotes:
    - "error"
    - "single"
    - { "avoidEscape": true, "allowTemplateLiterals": true }
  semi:
    - "error"
    - "always"
  no-console:
    - "error"
    - { "allow": ["warn", "error"] }
  curly: "error"
  valid-jsdoc: "error"
  dot-notation: "error"
  guard-for-in: "error"
  no-proto: "error"
  no-return-assign: "error"
  no-throw-literal: "error"
  no-use-before-define:
    - "error"
    - { "functions": false }
  callback-return: "off"
  global-require: "off"
  handle-callback-err: "warn"
  no-mixed-requires: "error"
  no-new-require: "error"
  no-path-concat: "error"
  no-sync: "error"
  array-bracket-spacing: "error"
  block-spacing: "error"
  brace-style: "error"
  camelcase: "off"
  comma-dangle:
    - "error"
    - "always-multiline"
  comma-spacing: "error"
  comma-style: "error"
  complexity:
    - "warn"
    - {
      max: 10
    }
  computed-property-spacing: "error"
  consistent-return: "error"
  consistent-this:
    - "error"
    - "self"
  eol-last:
    - "error"
    - "always"
  func-names: "off"
  key-spacing: "error"
  keyword-spacing: "error"
  max-depth:
    - "error"
    - { "max": 5 }
  max-len:
    - "warn"
    - { "code": 250, "comments": 100, "ignoreUrls": true, "ignoreTemplateLiterals": true, "ignoreRegExpLiterals": true }
  max-lines:
    - "warn"
    - { "max": 250, "skipBlankLines": true, "skipComments": true }
  max-nested-callbacks:
    - "error"
    - { "max": 4 }
  max-statements-per-line:
    - "error"
    - { "max": 1 }
  multiline-ternary:
    - "off"
  new-cap: "off"
  no-bitwise: "error"
  no-case-declarations: "off"
  no-inline-comments: "off"
  no-lonely-if: "error"
  no-multiple-empty-lines: "error"
  no-nested-ternary: "error"
  no-tabs: "error"
  no-trailing-spaces:
    - "error"
    - { "skipBlankLines": true }
  no-unneeded-ternary: "error"
  no-unused-vars:
    - "error"
    - { "argsIgnorePattern": "^_" }
  no-whitespace-before-property: "error"
  one-var-declaration-per-line: "error"
  operator-linebreak:
    - "error"
    - "after"
  padded-blocks:
    - "error"
    - "never"
  semi-spacing: "error"
  space-before-blocks: "error"
  space-before-function-paren:
    - "error"
    - "never"
  space-in-parens:
    - "error"
    - "never"
  space-infix-ops: "error"
  space-unary-ops:
    - "error"
    - { "words": true, "nonwords": false }
  spaced-comment:
    - "error"
    - "always"
  arrow-body-style: "error"
  arrow-parens: "error"
  arrow-spacing: "error"
  no-confusing-arrow: "error"
  prefer-const: "error"
  prefer-template: "error"
  template-curly-spacing: "error"
  wrap-iife: "error"
  yoda: "error"
  promise/catch-or-return: "off"
  promise/no-native: "off"
  promise/no-nesting: "off"
  promise/no-promise-in-callback: "off"
  promise/no-callback-in-promise: "off"
  padding-line-between-statements:
    - "error"
    - { "blankLine": "always", "prev": "function", "next": "*" }
    - { "blankLine": "always", "prev": "multiline-block-like", "next": "*" }
    - { "blankLine": "always", "prev": "multiline-expression", "next": "*" }
    - { "blankLine": "always", "prev": "try", "next": "*" }
